/* Generated by the Nim Compiler v0.17.2 */
/*   (c) 2017 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI57149 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI57148 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI124 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI44021 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI57017 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI57144 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NNI44021 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI124, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI124, name: "y", sons: null}]};
NTI44021.node = NNI44021;
var NNI57017 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "pt", len: 0, typ: NTI44021, name: "pt", sons: null}, 
{kind: 1, offset: "size", len: 0, typ: NTI124, name: "size", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI140, name: "color", sons: null}]};
NTI57017.node = NNI57017;
NTI57144.base = NTI57017;
NTI57148.base = NTI57017;
NTI57149.base = NTI57148;

function arrayConstr(len_20264, value_20265, typ_20266) {
		      var result = new Array(len_20264);
      for (var i = 0; i < len_20264; ++i) result[i] = nimCopy(null, value_20265, typ_20266);
      return result;
    

	
}

function setConstr() {
		      var result = {};
      for (var i = 0; i < arguments.length; ++i) {
        var x = arguments[i];
        if (typeof(x) == "object") {
          for (var j = x[0]; j <= x[1]; ++j) {
            result[j] = true;
          }
        } else {
          result[x] = true;
        }
      }
      return result;
    

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_19817, src_19818, ti_19819) {
	var result_20229 = null;

		switch (ti_19819.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(isFatPointer_19801(ti_19819))) {
			result_20229 = src_19818;
			}
			else {
				result_20229 = [src_19818[0], src_19818[1]];
			}
			
			break;
		case 19:
			      if (dest_19817 === null || dest_19817 === undefined) {
        dest_19817 = {};
      }
      else {
        for (var key in dest_19817) { delete dest_19817[key]; }
      }
      for (var key in src_19818) { dest_19817[key] = src_19818[key]; }
      result_20229 = dest_19817;
    
			break;
		case 18:
		case 17:
			if (!((ti_19819.base == null))) {
			result_20229 = nimCopy(dest_19817, src_19818, ti_19819.base);
			}
			else {
			if ((ti_19819.kind == 17)) {
			result_20229 = (dest_19817 === null || dest_19817 === undefined) ? {m_type: ti_19819} : dest_19817;
			}
			else {
				result_20229 = (dest_19817 === null || dest_19817 === undefined) ? {} : dest_19817;
			}
			}
			nimCopyAux(result_20229, src_19818, ti_19819.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_19818 === null) {
        result_20229 = null;
      }
      else {
        if (dest_19817 === null || dest_19817 === undefined) {
          dest_19817 = new Array(src_19818.length);
        }
        else {
          dest_19817.length = src_19818.length;
        }
        result_20229 = dest_19817;
        for (var i = 0; i < src_19818.length; ++i) {
          result_20229[i] = nimCopy(result_20229[i], src_19818[i], ti_19819.base);
        }
      }
    
			break;
		case 28:
			      if (src_19818 !== null) {
        result_20229 = src_19818.slice(0);
      }
    
			break;
		default: 
			result_20229 = src_19818;
			break;
		}

	return result_20229;

}
var nimvm_6119 = false;
var nim_program_result = 0;
var globalRaiseHook_11605 = [null];
var localRaiseHook_11610 = [null];
var outOfMemHook_11613 = [null];
var IDMATRIX_44056 = matrix2d_44040(1.0000000000000000e+000, 0.0, 0.0, 1.0000000000000000e+000, 0.0, 0.0);
var ORIGO_44057 = point2d_44052(0.0, 0.0);
var XAXIS_44058 = vector2d_44048(1.0000000000000000e+000, 0.0);
var YAXIS_44059 = vector2d_44048(0.0, 1.0000000000000000e+000);
var state_47605 = [{a0: 1773455756, a1: 4275166512}];

function getTime_50042() {
	var result_52413 = 0.0;

	BeforeRet: do {
		result_52413 = new Date();
		break BeforeRet;
	} while (false);

	return result_52413;

}
var startMilsecs_52512 = [getTime_50042()];

function rotl_47802(x_47804, k_47805) {
	var result_47806 = 0;

		result_47806 = ((x_47804 << k_47805) | ((x_47804 >>> 0) >>> ((64 - k_47805) >>> 0)));

	return result_47806;

}

function next_47842(s_47845) {
	var result_47846 = 0;

		var s0_47847 = s_47845.a0;
		var s1_47848 = s_47845.a1;
		result_47846 = ((s0_47847 + s1_47848) >>> 0);
		s1_47848 = (s1_47848 ^ s0_47847);
		s_47845.a0 = ((rotl_47802(s0_47847, 55) ^ s1_47848) ^ (s1_47848 << 14));
		s_47845.a1 = rotl_47802(s1_47848, 36);

	return result_47846;

}

function randomize_48434(seed_48436) {
		state_47605[0].a0 = ((seed_48436 ) >>> 16);
		state_47605[0].a1 = (seed_48436 & 65535);
		next_47842(state_47605[0]);

	
}

function randomize_53001() {
		randomize_48434(getTime_50042().getTime());

	
}

function isFatPointer_19801(ti_19803) {
	var result_19804 = false;

	BeforeRet: do {
		result_19804 = !((ConstSet1[ti_19803.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_19804;

}

function nimCopyAux(dest_19822, src_19823, n_19825) {
		switch (n_19825.kind) {
		case 0:
			break;
		case 1:
			      dest_19822[n_19825.offset] = nimCopy(dest_19822[n_19825.offset], src_19823[n_19825.offset], n_19825.typ);
    
			break;
		case 2:
			L1: do {
				var i_20215 = 0;
				var colontmp__20217 = 0;
				colontmp__20217 = (n_19825.len - 1);
				var res_20220 = 0;
				L2: do {
						L3: while (true) {
						if (!(res_20220 <= colontmp__20217)) break L3;
							i_20215 = res_20220;
							nimCopyAux(dest_19822, src_19823, n_19825.sons[i_20215]);
							res_20220 += 1;
						}
				} while(false);
			} while(false);
			break;
		case 3:
			      dest_19822[n_19825.offset] = nimCopy(dest_19822[n_19825.offset], src_19823[n_19825.offset], n_19825.typ);
      for (var i = 0; i < n_19825.sons.length; ++i) {
        nimCopyAux(dest_19822, src_19823, n_19825.sons[i][1]);
      }
    
			break;
		}

	
}

function new_57165() {
	var result_57170 = null;

	BeforeRet: do {
		var r_57202 = null;
		r_57202 = {pt: {x: 0.0, y: 0.0}, size: 0.0, color: null};
		result_57170 = r_57202;
		break BeforeRet;
	} while (false);

	return result_57170;

}

function point2d_44052(x_44054, y_44055) {
	var result_44918 = {x: 0.0, y: 0.0};

		result_44918.x = x_44054;
		result_44918.y = y_44055;

	return result_44918;

}

function random_48318(max_48320) {
	var result_48321 = 0.0;

		var x_48323 = next_47842(state_47605[0]);
		result_48321 = ((x_48323 / 4294967295) * max_48320);

	return result_48321;

}

function makeSnow_57141() {
	var result_57146 = arrayConstr(100, null, NTI57144);

	BeforeRet: do {
		var snows_57150 = arrayConstr(100, null, NTI57148);
		L1: do {
			var i_57162 = 0;
			var res_57219 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_57219 <= 99)) break L3;
						i_57162 = res_57219;
						var snow_57211 = new_57165();
						nimCopy(snow_57211.pt, point2d_44052(random_48318(1.0000000000000000e+003), random_48318(5.0000000000000000e+002)), NTI44021);
						snow_57211.size = (random_48318(1.0000000000000000e+000) * 2.2000000000000000e+001);
						snow_57211.color = "#ffffff";
						snows_57150[i_57162] = snow_57211;
						res_57219 += 1;
					}
			} while(false);
		} while(false);
		nimCopy(result_57146, snows_57150, NTI57149);
		break BeforeRet;
	} while (false);

	return result_57146;

}

function getContext2D_56513(c_56515) {
	var result_56516 = null;

		result_56516=c_56515.getContext('2d');

	return result_56516;

}

function fillStyleeq__56089(ctx_56091, color_56092) {
		ctx_56091.fillStyle=color_56092;

	
}

function draw_57021(ctx_57023, snow_57025) {
		ctx_57023.beginPath();
		ctx_57023.arc(snow_57025.pt.x, snow_57025.pt.y, (snow_57025.size / 2.0000000000000000e+000), 0.0, 6.2831853071795862e+000, true);
		ctx_57023.fill();

	
}

function setElements_44116(t_44119, ax_44120, ay_44121, bx_44122, by_44123, tx_44124, ty_44125) {
		t_44119.ax = ax_44120;
		t_44119.ay = ay_44121;
		t_44119.bx = bx_44122;
		t_44119.by = by_44123;
		t_44119.tx = tx_44124;
		t_44119.ty = ty_44125;

	
}

function move_44178(dx_44180, dy_44181) {
	var result_44182 = [{ax: 0.0, ay: 0.0, bx: 0.0, by: 0.0, tx: 0.0, ty: 0.0}];

		setElements_44116(result_44182[0], 1.0000000000000000e+000, 0.0, 0.0, 1.0000000000000000e+000, dx_44180, dy_44181);

	return result_44182[0];

}

function ampeq__44959(p_44962, t_44963) {
		var newx_44964 = (((p_44962.x * t_44963.ax) + (p_44962.y * t_44963.bx)) + t_44963.tx);
		p_44962.y = (((p_44962.x * t_44963.ay) + (p_44962.y * t_44963.by)) + t_44963.ty);
		p_44962.x = newx_44964;

	
}

function minuseq__44738(x_44743, x_44743_Idx, y_44745) {
		x_44743[x_44743_Idx] = (x_44743[x_44743_Idx] - y_44745);

	
}

function move_57027(snow_57030) {
		var dx_57031 = (random_48318(1.0000000000000000e+000) * 3.0000000000000000e+000);
		var dy_57032 = (random_48318(1.0000000000000000e+000) * 5.0000000000000000e+000);
		var m_57033 = move_44178(dx_57031, dy_57032);
		ampeq__44959(snow_57030.pt, m_57033);
		if ((1.0000000000000000e+003 < snow_57030.pt.x)) {
		minuseq__44738(snow_57030.pt, "x", 1.0000000000000000e+003);
		}
		
		if ((5.0000000000000000e+002 < snow_57030.pt.y)) {
		minuseq__44738(snow_57030.pt, "y", 5.0000000000000000e+002);
		}
		

	
}

function loop_57062(ctx_57064, snows_57068) {
		fillStyleeq__56089(ctx_57064, "#000000");
		ctx_57064.fillRect(0.0, 0.0, 1.0000000000000000e+003, 5.0000000000000000e+002);
		fillStyleeq__56089(ctx_57064, "#ffffff");
		L1: do {
			var snow_57122 = null;
			var i_57136 = 0;
			if ((i_57136 <= 99)) {
			L2: do {
					L3: while (true) {
					if (!true) break L3;
						snow_57122 = snows_57068[i_57136];
						draw_57021(ctx_57064, snow_57122);
						if ((99 <= i_57136)) {
						break L2;
						}
						
						i_57136 += 1;
					}
			} while(false);
			}
			
		} while(false);
		L4: do {
			var snow_57132 = null;
			var i_57140 = 0;
			if ((i_57140 <= 99)) {
			L5: do {
					L6: while (true) {
					if (!true) break L6;
						snow_57132 = snows_57068[i_57140];
						move_57027(snow_57132);
						if ((99 <= i_57140)) {
						break L5;
						}
						
						i_57140 += 1;
					}
			} while(false);
			}
			
		} while(false);

	
}

function main_57223() {

		function colonanonymous__57232() {
				loop_57062(ctx_57230, snows_57228);

			
		}

		randomize_53001();
		var snows_57228 = makeSnow_57141();
		var canvas_57229 = document.getElementById("snow");
		canvas_57229.width = 1000;
		canvas_57229.height = 500;
		var ctx_57230 = getContext2D_56513(canvas_57229);
		var timer_57234 = window.setInterval(colonanonymous__57232, 16);

	
}
main_57223();

function matrix2d_44040(ax_44042, ay_44043, bx_44044, by_44045, tx_44046, ty_44047) {
	var result_44134 = [{ax: 0.0, ay: 0.0, bx: 0.0, by: 0.0, tx: 0.0, ty: 0.0}];

		setElements_44116(result_44134[0], ax_44042, ay_44043, bx_44044, by_44045, tx_44046, ty_44047);

	return result_44134[0];

}

function vector2d_44048(x_44050, y_44051) {
	var result_44319 = {x: 0.0, y: 0.0};

		result_44319.x = x_44050;
		result_44319.y = y_44051;

	return result_44319;

}
